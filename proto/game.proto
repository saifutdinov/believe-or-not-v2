syntax = "proto3";

package game;

option go_package = "github.com/saifutdinov/believe-or-not-v2/proto";

service GameService {
  rpc Play(stream GameMessage) returns (stream GameMessage);
}

message GameMessage {
  string player_id = 1;
  string game_code = 2;

  oneof payload {
    CreateGameRequest create_game = 3;
    JoinGameRequest join_game = 4;
    PlayerReady ready = 5;
    PlaceCards place = 6;
    SayBelieve believe = 7;
    SayDontBelieve dont_believe = 8;
    ServerEvent event = 9;
    ErrorMessage error = 10;
  }
}

message CreateGameRequest {
  string player_name = 1;
  bool is_private = 2;
  string password = 3;
}

message JoinGameRequest {
  string player_name = 1;
  string password = 2;
}

message PlayerReady {}
message PlaceCards {
  repeated string cards = 1;
  string claimed_rank = 2;
}
message SayBelieve {}
message SayDontBelieve {}

message ServerEvent {
  oneof event {
    GameCreated created = 1;
    GameStarted started = 2;
    PlayerJoined joined = 3;
    PlayerList updated = 4;
    StackUpdated stack = 5;
    ActionResult result = 6;
    GameFinished finished = 7;
  }
}

message GameCreated {
  string game_code = 1;
}
message GameStarted {
  repeated string hand = 1;
}
message PlayerJoined {
  string player_name = 1;
}
message PlayerList {
  repeated Player players = 1;
}
message StackUpdated {
  string last_player_id = 1;
  int32 cards_count = 2;
  string claimed_rank = 3;
  int32 total_stack = 4;
}
message ActionResult {
  bool success = 1;
  string stack_taken_by = 2;
  repeated string revealed_cards = 3;
}
message GameFinished {
  string winner_id = 1;
  string loser_id = 2;
}
message ErrorMessage {
  string message = 1;
}
message Player {
  string id = 1;
  string name = 2;
  bool is_ready = 3;
  bool is_master_splinter = 4;
  bool is_rat = 5;
}
